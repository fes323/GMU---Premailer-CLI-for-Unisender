import os
import zipfile
from pathlib import Path

from rich.console import Console
from rich.progress import track

from gmu.utils.helpers import table_print

console = Console()


def archive_email(html_filename: str, html_content: str, attachments: dict, archive_name: str = None):
    """
    –°–æ–∑–¥–∞–µ—Ç zip-–∞—Ä—Ö–∏–≤ –∏–∑ –∏—Ç–æ–≥–æ–≤–æ–≥–æ HTML –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.
    –í–Ω—É—Ç—Ä–∏ –∞—Ä—Ö–∏–≤–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç:
        - index.html (—Ñ–∏–Ω–∞–ª—å–Ω—ã–π, –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π html)
        - images/ (–ø–∞–ø–∫–∞ —Å —Ñ–∞–π–ª–∞–º–∏ –∏–∑ attachments)
    :param html_filename: –∏—Å—Ö–æ–¥–Ω–æ–µ –∏–º—è html-—Ñ–∞–π–ª–∞ (–¥–ª—è –∏–º–µ–Ω–∏ –∞—Ä—Ö–∏–≤–∞/–∏–Ω–¥–µ–∫—Å–∞)
    :param html_content: —Ñ–∏–Ω–∞–ª—å–Ω—ã–π html-–∫–æ–¥ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    :param attachments: dict {filename: bytes} —Å –≤–ª–æ–∂–µ–Ω–∏—è–º–∏ (–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏)
    :param archive_name: –µ—Å–ª–∏ –Ω–µ –∑–∞–¥–∞–Ω ‚Äî —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ html_filename
    :return: –ø—É—Ç—å –∫ –∞—Ä—Ö–∏–≤—É
    """
    if not archive_name:
        html_files = list(Path(".").glob("*.html"))
        if not html_files:
            raise FileNotFoundError(
                "HTML –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—ã –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.")
        name = html_files[0].stem
        archive_name = f"{name}.zip"
    images_folder = "images"

    with zipfile.ZipFile(archive_name, "w", zipfile.ZIP_DEFLATED) as zipf:
        # –ü–∏—à–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π index.html (–≤ –∫–æ—Ä–µ–Ω—å –∞—Ä—Ö–∏–≤–∞)
        zipf.writestr("index.html", html_content)

        console.print("üì¶ Archiving a letter")
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É images –≤ –∞—Ä—Ö–∏–≤–µ –∏ –ø–∏—à–µ–º —Ç—É–¥–∞ –≤—Å–µ –≤–ª–æ–∂–µ–Ω–∏—è
        for img_name, img_bytes in track(attachments.items(), description=""):
            arcname = f"{images_folder}/{img_name}"
            zipf.writestr(arcname, img_bytes)
    table_print("SUCCESS", f"–ê—Ä—Ö–∏–≤ –ø–∏—Å—å–º–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {archive_name}")
    return os.path.abspath(archive_name)
